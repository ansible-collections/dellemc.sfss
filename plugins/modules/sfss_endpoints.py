#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Dell Inc. or its subsidiaries. All Rights Reserved
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

"""
The module file for sfss_endpoints
"""

from __future__ import absolute_import, division, print_function
__metaclass__ = type


DOCUMENTATION = """
---
module: sfss_endpoints
version_added: 1.0.0
notes:
- Idempotent is supported.
- Supports C(check_mode).
short_description: Manage SFSS endpoint attributes
description:
  - This module is used to manage SFSS endpoint attributes. Use this module to add hosts, subsystems, and direct discovery controllers (DDCs) to SFSS.
author: Mohamed Javeed (@javeedf)

options:
  config:
    description: A list of endpoints.
    type: list
    elements: dict
    suboptions:
      instance_id:
        description:
          - Instance ID.
        type: int
        required: True
      type:
        description:
          - Type of endpoints.
        type: str
        choices: ["host", "subsystem", "ddc"]
        required: True
      transport_address:
        description:
          - Transport IP address of endpoints such as hosts, direct discovery controllers (DDCs), and subsystems.
        type: str
        required: True
      transport_address_family:
        description:
          - Transport IP address type of endpoints such as hosts, DDCs, and subsystems.
        type: str
        choices: ["ipv4", "ipv6"]
        required: True
      transport_type:
        description:
          - Transport type UDP or TCP.
        type: str
        choices: ["tcp", "udp"]
        default: "tcp"
      transport_service_id:
        description:
          - Transport service ID.
        type: str
      port_id:
        description:
          - Transport port ID.
        type: int
        default: 0
      nqn_id:
        description:
          - NQN ID.
        type: str
      ddc_activate:
        description:
          - Activate DDC.
        type: bool
  state:
    description:
      - The state the configuration should be left in.
    type: str
    choices:
     - merged
     - deleted
    default: merged
"""
EXAMPLES = """
# Using deleted
#
# Before state:
# -------------
#
#redfish/v1/SFSS/1/Hosts?$expand=Hosts
# "Hosts": [
# {
#     "EId": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP",
#     "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
#     "TransportAddress": "1.2.3.4",
#     "TransportAddressFamily": "IPV4",
#     "PortId": 5452,
#     "TransportType": "TCP",
#     "TREQ": 0,
#     "TSAS": 0,
#     "RegistrationType": "Manual",
#     "ConnectionStatus": "Offline",
#     "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP')",
#     "@odata.type": "#Hosts.Hosts",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# },
# {
#     "EId": "@<3::1>:3454:TCP",
#     "TransportAddress": "3::1",
#     "TransportAddressFamily": "IPV6",
#     "PortId": 3454,
#     "TransportType": "TCP",
#     "TREQ": 0,
#     "TSAS": 0,
#     "RegistrationType": "Manual",
#     "ConnectionStatus": "Offline",
#     "@odata.id": "/redfish/v1/SFSS/1/Hosts('@<3::1>:3454:TCP')",
#     "@odata.type": "#Hosts.Hosts",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# }
# ]
- name: Stfs endpoints create
  dellemc.sfss.endpoints:
    config:
    - type: host
      instance_id: 1
      port_id: 3454
      transport_address: 3::1
      transport_address_family: ipv6
    state: deleted
#
# After state:
# -------------
#
#redfish/v1/SFSS/1/Hosts?$expand=Hosts
# "Hosts": [
# {
#     "EId": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP",
#     "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
#     "TransportAddress": "1.2.3.4",
#     "TransportAddressFamily": "IPV4",
#     "PortId": 5452,
#     "TransportType": "TCP",
#     "TREQ": 0,
#     "TSAS": 0,
#     "RegistrationType": "Manual",
#     "ConnectionStatus": "Offline",
#     "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP')",
#     "@odata.type": "#Hosts.Hosts",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# }
# ]

# Using deleted
#
# Before state:
# -------------
#
#redfish/v1/SFSS/1/Hosts?$expand=Hosts
# "Hosts": [
# {
#     "EId": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP",
#     "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
#     "TransportAddress": "1.2.3.4",
#     "TransportAddressFamily": "IPV4",
#     "PortId": 5452,
#     "TransportType": "TCP",
#     "TREQ": 0,
#     "TSAS": 0,
#     "RegistrationType": "Manual",
#     "ConnectionStatus": "Offline",
#     "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP')",
#     "@odata.type": "#Hosts.Hosts",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# },
# {
#     "EId": "@<3::1>:3454:TCP",
#     "TransportAddress": "3::1",
#     "TransportAddressFamily": "IPV6",
#     "PortId": 3454,
#     "TransportType": "TCP",
#     "TREQ": 0,
#     "TSAS": 0,
#     "RegistrationType": "Manual",
#     "ConnectionStatus": "Offline",
#     "@odata.id": "/redfish/v1/SFSS/1/Hosts('@<3::1>:3454:TCP')",
#     "@odata.type": "#Hosts.Hosts",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# }
# ]
- name: Stfs endpoints create
  dellemc.sfss.endpoints:
    config: []
    state: deleted
#
# After state:
# -------------
#
#redfish/v1/SFSS/1/Hosts?$expand=Hosts
# {
#   "Hosts@odata.count": 0,
#   "@odata.id": "/redfish/v1/SFSS/1/Hosts?$expand=Hosts",
#   "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts",
#   "@odata.type": "#HostsCollection.HostsCollection"
# }
#redfish/v1/SFSS/1/DDCs?$expand=DDCs
# {
#     "DDCs@odata.count": 0,
#     "@odata.id": "/redfish/v1/SFSS/1/DDCs?$expand=DDCs",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#DDCs",
#     "@odata.type": "#DDCsCollection.DDCsCollection"
# }
#redfish/v1/SFSS/1/Subsystems?$expand=Subsystems
# {
#     "Subsystems@odata.count": 0,
#     "@odata.id": "/redfish/v1/SFSS/1/Subsystems?$expand=Subsystems",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Subsystems",
#     "@odata.type": "#SubsystemsCollection.SubsystemsCollection"
# }

# Using merged
#
# Before state:
# -------------
#
#redfish/v1/SFSS/1/Hosts?$expand=Hosts
# "Hosts": [
# {
#   "EId": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP",
#   "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
#   "TransportAddress": "1.2.3.4",
#   "TransportAddressFamily": "IPV4",
#   "PortId": 5452,
#   "TransportType": "TCP",
#   "TREQ": 0,
#   "TSAS": 0,
#   "RegistrationType": "Manual",
#   "ConnectionStatus": "Offline",
#   "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP')",
#   "@odata.type": "#Hosts.Hosts",
#   "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# }
# ]
- name: Stfs endpoints create
  dellemc.sfss.endpoints:
    config:
    - type: host
      instance_id: 1
      port_id: 3454
      transport_address: 3::1
      transport_address_family: ipv6
#
# After state:
# -------------
#
#redfish/v1/SFSS/1/Hosts?$expand=Hosts
# "Hosts": [
# {
#     "EId": "nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP",
#     "NQN": "nqn.2014-08.org.nvmexpress:uuid:host",
#     "TransportAddress": "1.2.3.4",
#     "TransportAddressFamily": "IPV4",
#     "PortId": 5452,
#     "TransportType": "TCP",
#     "TREQ": 0,
#     "TSAS": 0,
#     "RegistrationType": "Manual",
#     "ConnectionStatus": "Offline",
#     "@odata.id": "/redfish/v1/SFSS/1/Hosts('nqn.2014-08.org.nvmexpress:uuid:host@1.2.3.4:5452:TCP')",
#     "@odata.type": "#Hosts.Hosts",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# },
# {
#     "EId": "@<3::1>:3454:TCP",
#     "TransportAddress": "3::1",
#     "TransportAddressFamily": "IPV6",
#     "PortId": 3454,
#     "TransportType": "TCP",
#     "TREQ": 0,
#     "TSAS": 0,
#     "RegistrationType": "Manual",
#     "ConnectionStatus": "Offline",
#     "@odata.id": "/redfish/v1/SFSS/1/Hosts('@<3::1>:3454:TCP')",
#     "@odata.type": "#Hosts.Hosts",
#     "@odata.context": "/redfish/v1/SFSS/1/$metadata#Hosts/Hosts/$entity"
# }
# ]
"""
RETURN = """
before:
  description: The configuration prior to the model invocation.
  returned: always
  sample: ['EId:@<3::1>:3454:TCP', 'TransportAddress:3::1', 'TransportAddressFamily:IPV6', 'PortId:3454']
  type: list

after:
  description: The resulting configuration model invocation.
  returned: when changed
  sample: ['EId:@<3::1>:3454:TCP', 'TransportAddress:3::1', 'TransportAddressFamily:IPV6', 'PortId:3454']
  type: list

commands:
  description: The set of commands pushed to the remote device.
  returned: always
  type: list
  sample: ['command 1', 'command 2', 'command 3']
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.dellemc.sfss.plugins.module_utils.network.sfss.argspec.endpoints.endpoints import EndpointsArgs
from ansible_collections.dellemc.sfss.plugins.module_utils.network.sfss.config.endpoints.endpoints import Endpoints


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=EndpointsArgs.argument_spec,
                           supports_check_mode=True)

    result = Endpoints(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
